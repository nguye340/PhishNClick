"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"b96e5d8f72c8\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/MDZkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImI5NmU1ZDhmNzJjOFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/components/fish/swimming-fish.tsx":
/*!***********************************************!*\
  !*** ./src/components/fish/swimming-fish.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SwimmingFish: function() { return /* binding */ SwimmingFish; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _effects_fireworks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../effects/fireworks */ \"(app-pages-browser)/./src/components/effects/fireworks.tsx\");\n/* harmony import */ var _modals_about_us_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modals/about-us-modal */ \"(app-pages-browser)/./src/components/modals/about-us-modal.tsx\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs\");\n/* __next_internal_client_entry_do_not_use__ SwimmingFish auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n// Fish colors\nconst FISH_COLORS = [\n    \"#00FFFF\",\n    \"#FF00FF\",\n    \"#FFFF00\",\n    \"#00FF00\",\n    \"#FF0000\",\n    \"#0088FF\"\n];\nfunction SwimmingFish() {\n    _s();\n    // Constants\n    const MAX_SCORE = 12; // Maximum score to achieve\n    const [fishes, setFishes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [mousePosition, setMousePosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [isHoveringFish, setIsHoveringFish] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [clickedCount, setClickedCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [showFireworks, setShowFireworks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showAboutUsModal, setShowAboutUsModal] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showScorePopup, setShowScorePopup] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [scorePopupPosition, setScorePopupPosition] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        x: 0,\n        y: 0\n    });\n    const [scorePopupColor, setScorePopupColor] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [isScrolled, setIsScrolled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isLandingPage, setIsLandingPage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true); // Track if we're on the landing page\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const animationFrameRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();\n    const lastUpdateTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    const targetFPSRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(60);\n    const frameIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(1000 / 60);\n    const catchSoundRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const completeSoundRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Initialize audio elements\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Create audio elements\n        const catchSound = new Audio(\"/sounds/catchPhish.ogg\");\n        const completeSound = new Audio(\"/sounds/complete.mp3\");\n        // Set properties\n        catchSound.volume = 0.7;\n        completeSound.volume = 0.7;\n        // Store references\n        catchSoundRef.current = catchSound;\n        completeSoundRef.current = completeSound;\n        return ()=>{\n            // Cleanup - properly handle refs without assigning null to .current\n            if (catchSoundRef.current) {\n                catchSoundRef.current.pause();\n                catchSoundRef.current = null;\n            }\n            if (completeSoundRef.current) {\n                completeSoundRef.current.pause();\n                completeSoundRef.current = null;\n            }\n        };\n    }, []);\n    // Initialize fish\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isLandingPage) return;\n        const initialFishes = Array.from({\n            length: MAX_SCORE\n        }).map((_, index)=>{\n            // Get viewport dimensions for proper positioning\n            const viewportWidth = window.innerWidth;\n            const viewportHeight = window.innerHeight;\n            // Calculate safe boundaries (away from edges)\n            const edgeBuffer = 100;\n            // For the last fish, ensure it spawns in a good position\n            let safeX, safeY;\n            if (index === MAX_SCORE - 1) {\n                // Place the last fish in the center area of the screen\n                const centerX = viewportWidth / 2;\n                const centerY = viewportHeight / 2;\n                const centerBuffer = 200; // Area around center\n                safeX = centerX - centerBuffer / 2 + Math.random() * centerBuffer;\n                safeY = centerY - centerBuffer / 2 + Math.random() * centerBuffer;\n            } else {\n                // Normal spawning for other fish\n                safeX = edgeBuffer + Math.random() * (viewportWidth - edgeBuffer * 2);\n                safeY = edgeBuffer + Math.random() * (viewportHeight - edgeBuffer * 2);\n            }\n            // Determine fish speed - more variation\n            const baseSpeed = 0.5 + Math.random() * 1.5; // Speed between 0.5 and 2.0\n            const speedMultiplier = index % 3 === 0 ? 1.5 : 1; // Some fish are faster\n            // Ensure fish are moving in different directions\n            const angle = Math.random() * Math.PI * 2; // Random angle in radians\n            const vx = Math.cos(angle) * baseSpeed * speedMultiplier;\n            const vy = Math.sin(angle) * baseSpeed * speedMultiplier;\n            return {\n                id: index,\n                x: safeX,\n                y: safeY,\n                vx,\n                vy,\n                rotation: Math.atan2(vy, vx) * (180 / Math.PI) + 90,\n                scale: 0.8 + Math.random() * 0.7,\n                color: FISH_COLORS[index % FISH_COLORS.length],\n                avoidsCursor: index % 2 === 0,\n                isClicked: false,\n                fadeOutProgress: false,\n                fadeInProgress: false,\n                opacity: 1,\n                zIndex: 10 + index,\n                clickRotation: 0,\n                clickScale: 1,\n                glowIntensity: 0,\n                movementPattern: \"straight\",\n                patternTimer: 0\n            };\n        });\n        setFishes(initialFishes);\n    }, [\n        isLandingPage\n    ]);\n    // Function to check if there are visible fish on screen\n    const checkVisibleFishOnScreen = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        // Get viewport dimensions\n        const viewportWidth = window.innerWidth;\n        const viewportHeight = window.innerHeight;\n        // Buffer to consider fish near the edge as not fully visible\n        const visibilityBuffer = 100;\n        // Count fish that are fully visible on screen\n        const visibleFishCount = fishes.filter((fish)=>{\n            // Skip clicked or fading fish\n            if (fish.isClicked || fish.fadeOutProgress || fish.opacity < 0.8) return false;\n            // Check if fish is fully visible on screen (with buffer)\n            const isOnScreen = fish.x > visibilityBuffer && fish.x < viewportWidth - visibilityBuffer && fish.y > visibilityBuffer && fish.y < viewportHeight - visibilityBuffer;\n            return isOnScreen;\n        }).length;\n        return visibleFishCount;\n    }, [\n        fishes\n    ]);\n    // Ensure there are always fish on screen\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isLandingPage) return;\n        const ensureFishOnScreen = ()=>{\n            const visibleCount = checkVisibleFishOnScreen();\n            // If no fish are visible on screen, force respawn some fish\n            if (visibleCount === 0) {\n                const remainingToClick = MAX_SCORE - clickedCount;\n                // Only respawn if we still have fish to catch\n                if (remainingToClick > 0) {\n                    setFishes((prevFishes)=>{\n                        // Find fish that are off-screen or invisible to respawn\n                        const fishesToUpdate = prevFishes.filter((fish)=>!fish.isClicked && (fish.opacity < 0.5 || fish.fadeOutProgress)).slice(0, Math.min(3, remainingToClick)); // Respawn up to 3 fish at once\n                        if (fishesToUpdate.length === 0) return prevFishes;\n                        // Create updated fish array\n                        return prevFishes.map((fish)=>{\n                            if (fishesToUpdate.some((f)=>f.id === fish.id)) {\n                                // Get viewport dimensions\n                                const viewportWidth = window.innerWidth;\n                                const viewportHeight = window.innerHeight;\n                                // Calculate safe spawn area (center of screen)\n                                const centerBuffer = 200;\n                                const centerX = viewportWidth / 2;\n                                const centerY = viewportHeight / 2;\n                                const safeX = centerX - centerBuffer + Math.random() * centerBuffer * 2;\n                                const safeY = centerY - centerBuffer + Math.random() * centerBuffer * 2;\n                                // Determine fish speed and direction\n                                const angle = Math.random() * Math.PI * 2;\n                                const speed = 0.5 + Math.random() * 1.5;\n                                const vx = Math.cos(angle) * speed;\n                                const vy = Math.sin(angle) * speed;\n                                return {\n                                    ...fish,\n                                    x: safeX,\n                                    y: safeY,\n                                    vx,\n                                    vy,\n                                    rotation: Math.atan2(vy, vx) * (180 / Math.PI) + 90,\n                                    opacity: 0.1,\n                                    fadeOutProgress: false,\n                                    fadeInProgress: true\n                                };\n                            }\n                            return fish;\n                        });\n                    });\n                }\n            }\n        };\n        // Check initially\n        ensureFishOnScreen();\n        // Set up interval to periodically check\n        const interval = setInterval(ensureFishOnScreen, 2000);\n        return ()=>clearInterval(interval);\n    }, [\n        isLandingPage,\n        clickedCount,\n        checkVisibleFishOnScreen\n    ]);\n    // Animation frame for smooth movement with performance optimizations\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isLandingPage) return;\n        // Use timestamp-based throttling for consistent frame rate\n        const targetFPS = 30; // Reduced from 60 for better performance\n        const frameInterval = 1000 / targetFPS;\n        let lastFrameTime = 0;\n        // Start animation loop with throttling\n        const animate = (timestamp)=>{\n            // Skip frames to maintain target FPS\n            const elapsed = timestamp - lastFrameTime;\n            if (elapsed > frameInterval) {\n                lastFrameTime = timestamp - elapsed % frameInterval;\n                setFishes((prevFishes)=>updateFishPositions(prevFishes));\n            }\n            animationFrameRef.current = requestAnimationFrame(animate);\n        };\n        animationFrameRef.current = requestAnimationFrame(animate);\n        // Clean up animation frame on unmount\n        return ()=>{\n            if (animationFrameRef.current) {\n                cancelAnimationFrame(animationFrameRef.current);\n            }\n        };\n    }, [\n        isLandingPage\n    ]);\n    // Memoized function to update fish positions with performance optimizations\n    const updateFishPositions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((prevFishes)=>{\n        // Get viewport dimensions - cache these values to avoid repeated DOM access\n        const viewportWidth = window.innerWidth;\n        const viewportHeight = window.innerHeight;\n        // Only process visible and active fish for better performance\n        return prevFishes.map((fish)=>{\n            // Handle clicked fish animation\n            if (fish.isClicked) {\n                // If fish is clicked, continue the fade out animation\n                const newOpacity = fish.opacity - 0.07; // Faster fade out\n                if (newOpacity <= 0) {\n                    // Calculate how many fish we need visible\n                    const remainingToClick = MAX_SCORE - clickedCount;\n                    const activeCount = prevFishes.filter((f)=>!f.isClicked && f.opacity > 0.5).length;\n                    // Only respawn if we still have fish to catch\n                    if (activeCount < remainingToClick) {\n                        // Reset fish when fully faded\n                        // Get viewport dimensions for proper positioning\n                        const viewportWidth = window.innerWidth;\n                        const viewportHeight = window.innerHeight;\n                        // Calculate safe boundaries (away from edges)\n                        const edgeBuffer = 100;\n                        const safeX = edgeBuffer + Math.random() * (viewportWidth - edgeBuffer * 2);\n                        const safeY = edgeBuffer + Math.random() * (viewportHeight - edgeBuffer * 2);\n                        // Determine fish speed - more variation\n                        const baseSpeed = 0.5 + Math.random() * 2; // Speed between 0.5 and 2.5\n                        const speedMultiplier = fish.avoidsCursor ? 1.5 : 1;\n                        return {\n                            ...fish,\n                            x: safeX,\n                            y: safeY,\n                            vx: (Math.random() - 0.5) * baseSpeed * speedMultiplier,\n                            vy: (Math.random() - 0.5) * baseSpeed * speedMultiplier,\n                            rotation: Math.random() * 360,\n                            isClicked: false,\n                            opacity: 0.1,\n                            clickRotation: 0,\n                            clickScale: 1,\n                            fadeInProgress: true\n                        };\n                    } else {\n                        // Don't respawn this fish, just keep it invisible\n                        return {\n                            ...fish,\n                            opacity: 0,\n                            isClicked: true,\n                            clickRotation: 0,\n                            clickScale: 1\n                        };\n                    }\n                }\n                return {\n                    ...fish,\n                    opacity: newOpacity,\n                    clickRotation: fish.clickRotation + 20,\n                    clickScale: Math.max(0.1, fish.clickScale - 0.08) // Faster zoom out\n                };\n            }\n            // Skip updating clicked fish\n            if (fish.isClicked) {\n                return fish;\n            }\n            // Handle fade in animation\n            if (fish.fadeInProgress) {\n                const newOpacity = fish.opacity + 0.05;\n                if (newOpacity >= 1) {\n                    return {\n                        ...fish,\n                        opacity: 1,\n                        fadeInProgress: false\n                    };\n                } else {\n                    return {\n                        ...fish,\n                        opacity: newOpacity\n                    };\n                }\n            }\n            // Calculate new position\n            let vx = fish.vx;\n            let vy = fish.vy;\n            // Apply cursor avoidance if this fish avoids the cursor\n            if (fish.avoidsCursor) {\n                const distX = mousePosition.x - fish.x;\n                const distY = mousePosition.y - fish.y;\n                const distance = Math.sqrt(distX * distX + distY * distY);\n                // If mouse is close, swim away more aggressively\n                if (distance < 200) {\n                    const angle = Math.atan2(distY, distX);\n                    // Stronger repulsion force with sharper falloff\n                    const repulsionForce = 0.3 * (1 - Math.pow(distance / 200, 2));\n                    // Apply stronger avoidance force\n                    vx -= Math.cos(angle) * repulsionForce * 2;\n                    vy -= Math.sin(angle) * repulsionForce * 2;\n                    // Add a bit of randomness to make the movement more erratic when avoiding\n                    vx += (Math.random() - 0.5) * 0.3;\n                    vy += (Math.random() - 0.5) * 0.3;\n                    // Increase speed when avoiding\n                    const currentSpeed = Math.sqrt(vx * vx + vy * vy);\n                    const targetSpeed = 3 + Math.random() * 2; // Faster escape speed\n                    if (currentSpeed < targetSpeed) {\n                        const speedFactor = targetSpeed / currentSpeed;\n                        vx *= speedFactor;\n                        vy *= speedFactor;\n                    }\n                }\n            }\n            // Calculate new position\n            let newX = fish.x + vx;\n            let newY = fish.y + vy;\n            // Check if fish is near any edge\n            const edgeBuffer = 60; // Increased buffer for smoother transitions\n            const nearLeftEdge = newX < edgeBuffer;\n            const nearRightEdge = newX > viewportWidth - 60;\n            const nearTopEdge = newY < edgeBuffer;\n            const nearBottomEdge = newY > viewportHeight - 30;\n            // Special handling for fish at the bottom - respawn at top\n            if (nearBottomEdge && !fish.fadeOutProgress && !fish.fadeInProgress && !fish.isClicked) {\n                // Calculate new position at the top of the screen\n                const safeX = Math.max(edgeBuffer, Math.min(newX, viewportWidth - edgeBuffer));\n                return {\n                    ...fish,\n                    x: safeX,\n                    y: edgeBuffer,\n                    opacity: 0.1,\n                    fadeInProgress: true,\n                    // Keep the same horizontal direction but reverse vertical\n                    vx: fish.vx,\n                    vy: Math.abs(fish.vy) * (Math.random() > 0.5 ? 1 : -1),\n                    rotation: fish.rotation + 180 // Flip the fish\n                };\n            }\n            // If fish is near other edges, start fade out\n            if ((nearLeftEdge || nearRightEdge || nearTopEdge) && !fish.fadeOutProgress && !fish.fadeInProgress && !fish.isClicked) {\n                return {\n                    ...fish,\n                    fadeOutProgress: true,\n                    x: newX,\n                    y: newY,\n                    vx,\n                    vy,\n                    rotation: fish.rotation\n                };\n            }\n            // Fade out animation for fish near edges\n            if (fish.fadeOutProgress) {\n                const newOpacity = fish.opacity - 0.05;\n                if (newOpacity <= 0) {\n                    // Calculate how many fish we need visible\n                    const remainingToClick = MAX_SCORE - clickedCount;\n                    const activeCount = prevFishes.filter((f)=>!f.isClicked && !f.fadeOutProgress && f.opacity > 0.5).length - 1; // -1 for this fish\n                    // Only respawn if we need more fish to reach the remaining target\n                    if (activeCount < remainingToClick) {\n                        // Get viewport dimensions for proper positioning\n                        const viewportWidth = window.innerWidth;\n                        const viewportHeight = window.innerHeight;\n                        // Determine which edge to spawn from (avoiding the last fish being special)\n                        const spawnEdge = Math.floor(Math.random() * 3); // 0: left, 1: right, 2: top\n                        let safeX, safeY, newVx, newVy;\n                        const safeEdgeBuffer = 100;\n                        if (spawnEdge === 0) {\n                            safeX = edgeBuffer;\n                            safeY = safeEdgeBuffer + Math.random() * (viewportHeight - safeEdgeBuffer * 2);\n                            newVx = Math.abs(fish.vx) || 0.5 + Math.random() * 1.5; // Ensure moving right\n                            newVy = (Math.random() - 0.5) * 2;\n                        } else if (spawnEdge === 1) {\n                            safeX = viewportWidth - edgeBuffer;\n                            safeY = safeEdgeBuffer + Math.random() * (viewportHeight - safeEdgeBuffer * 2);\n                            newVx = -Math.abs(fish.vx) || -(0.5 + Math.random() * 1.5); // Ensure moving left\n                            newVy = (Math.random() - 0.5) * 2;\n                        } else {\n                            safeX = safeEdgeBuffer + Math.random() * (viewportWidth - safeEdgeBuffer * 2);\n                            safeY = edgeBuffer;\n                            newVx = (Math.random() - 0.5) * 2;\n                            newVy = Math.abs(fish.vy) || 0.5 + Math.random() * 1.5; // Ensure moving down\n                        }\n                        // Calculate rotation based on direction\n                        const newRotation = Math.atan2(newVy, newVx) * (180 / Math.PI) + 90;\n                        return {\n                            ...fish,\n                            x: safeX,\n                            y: safeY,\n                            vx: newVx,\n                            vy: newVy,\n                            rotation: newRotation,\n                            opacity: 0.1,\n                            fadeOutProgress: false,\n                            fadeInProgress: true,\n                            clickRotation: 0,\n                            clickScale: 1,\n                            glowIntensity: 0\n                        };\n                    } else {\n                        // Don't respawn this fish, just keep it invisible\n                        return {\n                            ...fish,\n                            opacity: 0,\n                            fadeOutProgress: false\n                        };\n                    }\n                }\n                return {\n                    ...fish,\n                    opacity: newOpacity,\n                    x: newX,\n                    y: newY\n                };\n            }\n            // Calculate fish rotation based on movement direction\n            const targetRotation = Math.atan2(vy, vx) * (180 / Math.PI) + 90;\n            // Smoothly interpolate rotation\n            let newRotation = fish.rotation;\n            const rotationDiff = targetRotation - fish.rotation;\n            // Handle angle wrapping\n            if (rotationDiff > 180) {\n                newRotation += (rotationDiff - 360) * 0.1;\n            } else if (rotationDiff < -180) {\n                newRotation += (rotationDiff + 360) * 0.1;\n            } else {\n                newRotation += rotationDiff * 0.1;\n            }\n            // Return updated fish\n            return {\n                ...fish,\n                x: newX,\n                y: newY,\n                vx,\n                vy,\n                rotation: newRotation\n            };\n        });\n    }, [\n        mousePosition\n    ]);\n    // Handle fish click\n    const handleFishClick = (id)=>{\n        // Find the clicked fish\n        const clickedFishIndex = fishes.findIndex((fish)=>fish.id === id);\n        if (clickedFishIndex === -1) return;\n        // Don't allow clicking already clicked fish\n        if (fishes[clickedFishIndex].isClicked) return;\n        // Play catch sound\n        if (catchSoundRef.current) {\n            catchSoundRef.current.currentTime = 0; // Reset sound to start\n            catchSoundRef.current.play().catch((err)=>console.log(\"Audio play error:\", err));\n        }\n        // Show score popup\n        setScorePopupPosition({\n            x: fishes[clickedFishIndex].x,\n            y: fishes[clickedFishIndex].y\n        });\n        setScorePopupColor(fishes[clickedFishIndex].color);\n        setShowScorePopup(true);\n        // Hide score popup after animation\n        setTimeout(()=>{\n            setShowScorePopup(false);\n        }, 1000);\n        // Update fish state to show it's been clicked\n        setFishes((prevFishes)=>{\n            const newFishes = [\n                ...prevFishes\n            ];\n            newFishes[clickedFishIndex] = {\n                ...newFishes[clickedFishIndex],\n                isClicked: true,\n                fadeOutProgress: false,\n                fadeInProgress: false,\n                clickRotation: 0,\n                clickScale: 1,\n                glowIntensity: 1.5 // Start with max glow\n            };\n            return newFishes;\n        });\n        // Increment clicked count\n        setClickedCount((prevCount)=>{\n            const newCount = prevCount + 1;\n            // Check if all fish have been clicked\n            if (newCount === MAX_SCORE) {\n                // Play completion sound\n                if (completeSoundRef.current) {\n                    completeSoundRef.current.play().catch((err)=>console.log(\"Audio play error:\", err));\n                }\n                setShowFireworks(true);\n                setTimeout(()=>{\n                    setShowAboutUsModal(true);\n                }, 2000);\n            }\n            return newCount;\n        });\n    };\n    // Reset fish when modal is closed\n    const handleModalClose = ()=>{\n        setShowAboutUsModal(false);\n        setShowFireworks(false);\n        // Reset all fish\n        if (containerRef.current) {\n            const containerRect = containerRef.current.getBoundingClientRect();\n            setFishes((prevFishes)=>{\n                return prevFishes.map((fish)=>({\n                        ...fish,\n                        x: Math.random() * (containerRect.width - 100),\n                        y: Math.random() * (containerRect.height - 100),\n                        vx: (Math.random() - 0.5) * 2,\n                        vy: (Math.random() - 0.5) * 2,\n                        rotation: Math.random() * 360,\n                        isClicked: false,\n                        opacity: 1,\n                        clickRotation: 0,\n                        clickScale: 1,\n                        glowIntensity: 0,\n                        movementPattern: \"straight\",\n                        patternTimer: 0\n                    }));\n            });\n        }\n        setClickedCount(0);\n    };\n    // Track scroll position\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleScroll = ()=>{\n            const scrollPosition = window.scrollY;\n            setIsScrolled(scrollPosition > 50); // Show when less than 50px scrolled\n        };\n        window.addEventListener(\"scroll\", handleScroll);\n        return ()=>window.removeEventListener(\"scroll\", handleScroll);\n    }, []);\n    // Update custom cursor when hovering fish\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const cursor = document.querySelector(\".custom-cursor\");\n        if (cursor) {\n            if (isHoveringFish) {\n                cursor.classList.add(\"hover-fish\");\n            } else {\n                cursor.classList.remove(\"hover-fish\");\n            }\n        }\n    });\n    // Track if we're on the landing page\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Function to check if we're on the landing page\n        const checkIfLandingPage = ()=>{\n            // Check if we're on the landing page (root path)\n            const isRoot = window.location.pathname === \"/\" || window.location.pathname === \"\";\n            setIsLandingPage(isRoot);\n        };\n        // Check initially\n        checkIfLandingPage();\n        // Listen for route changes\n        window.addEventListener(\"popstate\", checkIfLandingPage);\n        // For Next.js route changes\n        const handleRouteChange = ()=>{\n            setTimeout(checkIfLandingPage, 50); // Small delay to ensure DOM is updated\n        };\n        // Try to use Next.js router events if available\n        try {\n            var _window___NEXT_DATA__;\n            const nextRouter = (_window___NEXT_DATA__ = window.__NEXT_DATA__) === null || _window___NEXT_DATA__ === void 0 ? void 0 : _window___NEXT_DATA__.router;\n            if (nextRouter) {\n                var _nextRouter_events;\n                (_nextRouter_events = nextRouter.events) === null || _nextRouter_events === void 0 ? void 0 : _nextRouter_events.on(\"routeChangeComplete\", handleRouteChange);\n            }\n        } catch (e) {\n            console.log(\"Next router not available for event binding\");\n        }\n        // Add a mutation observer as a fallback to detect URL changes\n        const observer = new MutationObserver((mutations)=>{\n            mutations.forEach((mutation)=>{\n                if (mutation.type === \"childList\" || mutation.type === \"attributes\") {\n                    handleRouteChange();\n                }\n            });\n        });\n        observer.observe(document.body, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\n                \"href\"\n            ]\n        });\n        return ()=>{\n            window.removeEventListener(\"popstate\", checkIfLandingPage);\n            try {\n                var _window___NEXT_DATA__;\n                const nextRouter = (_window___NEXT_DATA__ = window.__NEXT_DATA__) === null || _window___NEXT_DATA__ === void 0 ? void 0 : _window___NEXT_DATA__.router;\n                if (nextRouter) {\n                    var _nextRouter_events;\n                    (_nextRouter_events = nextRouter.events) === null || _nextRouter_events === void 0 ? void 0 : _nextRouter_events.off(\"routeChangeComplete\", handleRouteChange);\n                }\n            } catch (e) {\n            // Ignore\n            }\n            observer.disconnect();\n        };\n    }, []);\n    // Track mouse position\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!isLandingPage) return;\n        const handleMouseMove = (e)=>{\n            setMousePosition({\n                x: e.clientX,\n                y: e.clientY\n            });\n        };\n        window.addEventListener(\"mousemove\", handleMouseMove);\n        return function() {\n            window.removeEventListener(\"mousemove\", handleMouseMove);\n            if (animationFrameRef.current) {\n                cancelAnimationFrame(animationFrameRef.current);\n            }\n        };\n    }, [\n        isLandingPage\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            isLandingPage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: containerRef,\n                className: \"fixed inset-0 pointer-events-none z-10\",\n                style: {\n                    overflow: \"hidden\",\n                    height: \"100vh\",\n                    maxHeight: \"100vh\" // Ensure it doesn't exceed viewport\n                },\n                children: [\n                    fishes.map((fish)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"absolute pointer-events-auto swimming-fish\",\n                            style: {\n                                left: fish.x - 10,\n                                top: fish.y - 10,\n                                transform: \"rotate(\".concat(fish.rotation + (fish.isClicked ? fish.clickRotation : 0), \"deg) scale(\").concat(fish.scale * (fish.isClicked ? fish.clickScale : 1), \")\"),\n                                opacity: fish.opacity,\n                                color: fish.color,\n                                zIndex: 10,\n                                width: \"60px\",\n                                height: \"40px\",\n                                transition: fish.isClicked ? \"none\" : \"transform 0.1s ease-out, filter 0.2s ease\",\n                                userSelect: \"none\",\n                                WebkitUserSelect: \"none\",\n                                MozUserSelect: \"none\",\n                                msUserSelect: \"none\",\n                                padding: \"10px\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\"\n                            },\n                            onClick: ()=>handleFishClick(fish.id),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"fish-inner\",\n                                style: {\n                                    filter: \"drop-shadow(0 0 \".concat(5 + fish.glowIntensity * 10, \"px \").concat(fish.color, \")\"),\n                                    transition: \"filter 0.1s ease-in-out, transform 0.2s ease\",\n                                    userSelect: \"none\",\n                                    WebkitUserSelect: \"none\",\n                                    MozUserSelect: \"none\",\n                                    msUserSelect: \"none\",\n                                    transform: fish.isClicked ? \"scale(0.8) rotate(180deg)\" : \"scale(1)\"\n                                },\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                    src: \"/img/catphish_white_centered.svg\",\n                                    alt: \"Catfish\",\n                                    width: 60,\n                                    height: 30,\n                                    style: {\n                                        filter: \"brightness(\".concat(1 + fish.glowIntensity * 0.8, \") hue-rotate(\").concat(fish.id * 30, \"deg) \").concat(fish.avoidsCursor ? \"saturate(1.5)\" : \"\")\n                                    },\n                                    className: \"fish-image\"\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                                    lineNumber: 787,\n                                    columnNumber: 17\n                                }, this)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                                lineNumber: 775,\n                                columnNumber: 15\n                            }, this)\n                        }, fish.id, false, {\n                            fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                            lineNumber: 751,\n                            columnNumber: 13\n                        }, this)),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"fixed top-24 right-8 z-50 bg-arcade-bg/80 backdrop-blur-sm p-4 rounded-lg border border-arcade-cyan/30 shadow-glow-sm\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"font-arcade text-2xl text-arcade-cyan glow-heading\",\n                                children: [\n                                    \"Score: \",\n                                    clickedCount,\n                                    \" / \",\n                                    MAX_SCORE\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                                lineNumber: 803,\n                                columnNumber: 13\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"font-terminal text-sm text-white/70 mt-1\",\n                                children: \"Catch all the phish!\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                                lineNumber: 806,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                        lineNumber: 802,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_5__.AnimatePresence, {\n                        children: showScorePopup && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_6__.motion.div, {\n                            initial: {\n                                opacity: 0,\n                                y: 0,\n                                scale: 0.5\n                            },\n                            animate: {\n                                opacity: 1,\n                                y: -50,\n                                scale: 1.2\n                            },\n                            exit: {\n                                opacity: 0,\n                                scale: 0.5\n                            },\n                            transition: {\n                                duration: 0.8\n                            },\n                            className: \"absolute pointer-events-none\",\n                            style: {\n                                left: scorePopupPosition.x + 30,\n                                top: scorePopupPosition.y,\n                                color: scorePopupColor,\n                                zIndex: 20,\n                                fontWeight: \"bold\",\n                                textShadow: \"0 0 8px \".concat(scorePopupColor)\n                            },\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"font-arcade text-2xl\",\n                                children: \"+1\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                                lineNumber: 829,\n                                columnNumber: 17\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                            lineNumber: 814,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                        lineNumber: 812,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"fixed bottom-10 left-0 right-0 text-center z-20 pointer-events-none transition-opacity duration-300 ease-in-out \".concat(isScrolled ? \"opacity-0\" : \"opacity-100\"),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                            className: \"font-arcade text-lg text-arcade-cyan blinking-text\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                            lineNumber: 840,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                        lineNumber: 835,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                lineNumber: 741,\n                columnNumber: 9\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_effects_fireworks__WEBPACK_IMPORTED_MODULE_3__.Fireworks, {\n                isActive: showFireworks,\n                duration: 5\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                lineNumber: 847,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_modals_about_us_modal__WEBPACK_IMPORTED_MODULE_4__.AboutUsModal, {\n                isOpen: showAboutUsModal,\n                onClose: handleModalClose\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                lineNumber: 852,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                src: \"/sounds/catchPhish.ogg\",\n                preload: \"auto\",\n                style: {\n                    display: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                lineNumber: 858,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"audio\", {\n                src: \"/sounds/complete.mp3\",\n                preload: \"auto\",\n                style: {\n                    display: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\nguye\\\\Documents\\\\PhishNClick\\\\frontend\\\\src\\\\components\\\\fish\\\\swimming-fish.tsx\",\n                lineNumber: 859,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(SwimmingFish, \"CyUa4vGkI27oWcofs8NNDljh30g=\");\n_c = SwimmingFish;\nvar _c;\n$RefreshReg$(_c, \"SwimmingFish\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/fish/swimming-fish.tsx\n"));

/***/ })

});